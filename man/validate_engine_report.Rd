% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_c_subregistry_validate_engines.R
\name{validate_engine_report}
\alias{validate_engine_report}
\title{Subregistry Validation for Report Engines}
\usage{
validate_engine_report(wrapper_function, default_params_function, engine_name)
}
\arguments{
\item{wrapper_function}{Function. The wrapper function for the report engine.}

\item{default_params_function}{Function. Provides default parameters for the engine.}

\item{engine_name}{Character. Name of the engine being validated (e.g., \code{"report_modelcomparison"}).}
}
\value{
TRUE if the engine passes structural validation; otherwise an error is raised.
}
\description{
Validates report engines during dynamic registration via \code{register_engine()}.
Ensures that the report engine adheres to the standardized input interface and
produces output using \code{initialize_output_report()}.
}
\details{
\strong{Purpose:}
\itemize{
\item Ensures structural compatibility with the reporting architecture of the framework.
\item Allows validated reports to be composed and passed to publishing engines.
}

\strong{Validation Criteria:}
\itemize{
\item Wrapper must accept the following arguments:
\itemize{
\item \code{control}: Workflow control object.
\item \code{reportelements}: List of prepared reportelements.
\item \code{alias_report}: Unique identifier of the report.
}
\item Wrapper must call \code{initialize_output_report()}.
\item No functional validation is performed, as reports are structured compositions.
}

\strong{When to Use:}
\itemize{
\item Automatically triggered during \code{register_engine()} for any \verb{report_*} engine.
\item Can also be run manually before registration to pre-test structural conformity.
}
}
\keyword{internal}
