% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_c_subregistry_validate_engines.R
\name{validate_resume_object}
\alias{validate_resume_object}
\title{Validate Resume Object for Workflow Resumption}
\usage{
validate_resume_object(resume_object)
}
\arguments{
\item{resume_object}{A list object created via \code{controller_resume_execution()}.}
}
\value{
Returns \code{TRUE} if validation is successful; otherwise throws a descriptive error.
}
\description{
Ensures that the object passed to \code{resume_fairness_workflow()} contains
all required fields with the correct structure and types. This check is
critical to prevent runtime errors when resuming SLURM-based or
externally executed workflows.
}
\details{
\strong{Expected Structure:}
The resume object must be a list with the following fields:
\itemize{
\item \code{control}: The full control object as used in the original workflow.
\item \code{split_output}: A list of generated data splits, created by a splitter engine.
\item \code{execution_output}: A list containing execution metadata and split results.
}

Within \code{execution_output}, the following fields are mandatory:
\itemize{
\item \code{workflow_results}: A list of outputs from each split, named identically to \code{split_output$splits}.
\item \code{execution_type}: Character string describing the execution method (e.g., \code{"slurm_array"}).
\item \code{continue_workflow}: Logical flag controlling whether remaining steps should execute automatically.
}

\strong{Usage Note:}
Use this function after calling \code{controller_resume_execution()} or any custom SLURM resumption routine.
}
\keyword{internal}
