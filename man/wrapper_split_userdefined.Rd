% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_1_d_engine_split_userdefined.R
\name{wrapper_split_userdefined}
\alias{wrapper_split_userdefined}
\title{Wrapper for Split Engine: User-Defined}
\usage{
wrapper_split_userdefined(control)
}
\arguments{
\item{control}{A standardized control object with externally assigned train/test data.}
}
\value{
A standardized splitter output object.
}
\description{
Uses pre-specified train/test data from the control object. Intended for externally managed splits.
Returns standardized output using \code{initialize_output_split()}.
}
\details{
This wrapper internally sets \code{internal_skip_validation = TRUE} to bypass structural engine validation.
This is necessary because user-defined splits are not generated by the engine but injected directly via \code{control$data$train} and \code{control$data$test}.
Validation is therefore not meaningful and intentionally skipped.

\strong{Standardized Inputs:}
\itemize{
\item \code{control$data$train}: Pre-specified training dataset.
\item \code{control$data$test}: Pre-specified test dataset.
}

\strong{Engine-Specific Parameters (\code{control$params$split$params}):}
This engine does not support any additional parameters.

\strong{Notes:}
\itemize{
\item No randomness, splitting, or stratification is performed. The datasets must be fully specified.
\item Internally sets \code{internal_skip_validation = TRUE} to exclude engine from automatic validation checks.
}

\strong{Workflow Integration:}
\itemize{
\item \code{target_var} is \strong{automatically resolved} from \code{control$data$vars$target_var}
if not provided explicitly in the controller.
\item This allows users to define \code{target_var} only once in \code{controller_vars()}.
}

\strong{Example Control Snippet:}

\if{html}{\out{<div class="sourceCode">}}\preformatted{control$split_method <- "split_userdefined"
control$data$train <- my_train_data
control$data$test  <- my_test_data
control$params$split <- controller_split(
  seed = NULL,
  target_var = NULL,
  params = NULL
)
}\if{html}{\out{</div>}}

\strong{Template Reference:}
See full template in \verb{inst/templates_control/1_d_template_control_split_userdefined.R}

\strong{Standardized Output (returned to framework):}
A list structured via \code{initialize_output_split()} with:
\itemize{
\item \code{split_type}: \code{"userdefined"}
\item \code{splits}: Named list \code{user} containing train/test sets
\item \code{seed}: \code{NULL}
\item \code{params}: \code{NULL}
\item \code{specific_output}: \code{list(source = "user_provided")}
}
}
\seealso{
\code{\link[=engine_split_userdefined]{engine_split_userdefined()}},
\code{\link[=default_params_split_userdefined]{default_params_split_userdefined()}},
\code{\link[=initialize_output_split]{initialize_output_split()}},
\code{\link[=controller_split]{controller_split()}},
Template: \verb{inst/templates_control/1_d_template_control_split_userdefined.R}
Helper: \code{\link[=show_template]{show_template()}}
}
\keyword{internal}
