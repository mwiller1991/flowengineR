% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_4_c__engine_train_gbm__mwiller.R
\name{wrapper_train_gbm}
\alias{wrapper_train_gbm}
\title{Wrapper for Training Engine: Gradient Boosting Machine (GBM)}
\usage{
wrapper_train_gbm(control)
}
\arguments{
\item{control}{A standardized control object (see \code{controller_training()}).}
}
\value{
A standardized output list structured via \code{initialize_output_train()}.
}
\description{
Validates and prepares standardized inputs, merges default and user-defined hyperparameters,
performs light target adaptation (0/1 for bernoulli), and invokes the GBM training engine.
Returns standardized output using \code{initialize_output_train()}.
}
\details{
\strong{Standardized Inputs:}
\itemize{
\item \code{control$params$train$formula}: A formula specifying the model structure.
\item \code{control$params$train$data}: Named list with training data (\code{original} and/or \code{normalized}).
→ This list is automatically provided by the workflow, not by the user.
\item \code{control$params$train$norm_data}: Logical flag indicating whether to use normalized data.
\item \code{control$params$train$params}: Optional user-specified hyperparameters.
}

\strong{Engine-Specific Parameters (\code{control$params$train$params}):}
\itemize{
\item \code{distribution} \emph{(char)}: "gaussian" or "bernoulli". If \code{NULL}, inferred from target (binary → bernoulli).
\item \code{n.trees} \emph{(int)}: Number of trees (default: 1000).
\item \code{interaction.depth} \emph{(int)}: Tree depth (default: 3).
\item \code{shrinkage} \emph{(num)}: Learning rate (default: 0.05).
\item \code{n.minobsinnode} \emph{(int)}: Min obs per terminal node (default: 10).
\item \code{bag.fraction} \emph{(num)}: Subsample fraction per tree (default: 0.5).
\item \code{train.fraction} \emph{(num)}: Fraction of data used for training (default: 1.0).
\item \code{sample_weight} \emph{(numeric vector)}: Observation weights (optional; defaults to equal weights).
}

\strong{Example Control Snippet:}

\if{html}{\out{<div class="sourceCode">}}\preformatted{control$engine_select$train <- "train_gbm"
control$params$train <- controller_training(
  formula = target ~ .,
  norm_data = TRUE,
  params = list(
    distribution = "bernoulli",
    n.trees = 1500,
    interaction.depth = 3,
    shrinkage = 0.05,
    bag.fraction = 0.7
  )
)
}\if{html}{\out{</div>}}

\strong{Template Reference:}
See full template in \verb{inst/templates_control/4_c_template_train_gbm.R}

\strong{Standardized Output (returned to framework):}
\itemize{
\item A structured list created by \code{initialize_output_train()}:
\itemize{
\item \code{model}: Fitted model object.
\item \code{model_type}: Identifier string ("gbm").
\item \code{formula}: Used training formula.
\item \code{hyperparameters}: Merged hyperparameter set.
\item \code{specific_output}: Training duration and optional metadata (e.g., class mapping).
}
}
}
\seealso{
\code{\link[=engine_train_gbm]{engine_train_gbm()}},
\code{\link[=default_params_train_gbm]{default_params_train_gbm()}},
\code{\link[=initialize_output_train]{initialize_output_train()}},
\code{\link[=controller_training]{controller_training()}}
}
\keyword{internal}
