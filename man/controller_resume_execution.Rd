% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_d__controller__mwiller.R
\name{controller_resume_execution}
\alias{controller_resume_execution}
\title{Controller: Resume Input Specification}
\usage{
controller_resume_execution(
  control,
  split_output,
  workflow_results,
  metadata = NULL
)
}
\arguments{
\item{control}{The original control object used during the initial workflow configuration.}

\item{split_output}{A previously stored result object returned by the splitter engine.}

\item{workflow_results}{A named list of \code{run_workflow_singlesplitloop()} results, typically loaded from file.}

\item{metadata}{Optional. A named list of metadata to be stored in \code{specific_output} of the execution engine (e.g., runtime info, job ID).}
}
\value{
Named list. To be passed to \code{resume_workflow()} as input after external execution. Compatible with all \code{flowengineR} modules.
}
\description{
Constructs a standardized resume object to re-enter the flowengineR
workflow after external execution (e.g., SLURM-based batch processing).
The returned object is designed for direct use in \code{resume_workflow()}.
}
\details{
\strong{Purpose:}
\itemize{
\item Allows decoupling of long-running execution from downstream workflow processing.
\item Supports external infrastructures like HPC clusters or SLURM-based dispatch.
}

\strong{Standardized Structure:}
\itemize{
\item \code{control}: The full original control object.
\item \code{split_output}: The result object from the splitter engine.
\item \code{execution_output}: Execution result, must contain \code{workflow_results}.
This object is created via \code{initialize_output_execution()} inside this controller.
}

\strong{Usage Example:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{workflow_results <- readRDS("path/to/slurm_results.rds")
resume_object <- controller_resume_execution(
  control = control,
  split_output = split_output,
  workflow_results = workflow_results,
  metadata = list(slurm_job_id = "batch123")
)

result <- resume_workflow(resume_object)
}\if{html}{\out{</div>}}
}
