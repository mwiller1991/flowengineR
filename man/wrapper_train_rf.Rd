% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_4_c__engine_train_rf__mwiller.R
\name{wrapper_train_rf}
\alias{wrapper_train_rf}
\title{Wrapper for Training Engine: Random Forest (RF)}
\usage{
wrapper_train_rf(control)
}
\arguments{
\item{control}{A standardized control object (see \code{controller_training()}).}
}
\value{
A standardized output list structured via \code{initialize_output_train()}.
}
\description{
Validates and prepares standardized inputs, merges default and user-defined hyperparameters,
and invokes the RF training engine. Returns standardized output using \code{initialize_output_train()}.
}
\details{
\strong{Standardized Inputs:}
\itemize{
\item \code{control$params$train$formula}: A formula specifying the model structure.
\item \code{control$params$train$data}: Named list with training data (\code{original} and/or \code{normalized}).
â†’ This list is automatically provided by the workflow, not by the user.
\item \code{control$params$train$norm_data}: Logical flag indicating whether to use normalized data.
\item \code{control$params$train$params}: Optional user-specified hyperparameters..
}

\strong{Engine-Specific Parameters (\code{control$params$train$params}):}
\itemize{
\item \code{ntree} \emph{(integer)}: Number of trees to grow (default: 500).
\item \code{mtry} \emph{(integer)}: Number of variables sampled at each split (default: sqrt(p)).
\item \code{sample_weight} \emph{(numeric vector)}: Observation weights (optional; defaults to equal weights).
}

\strong{Example Control Snippet:}

\if{html}{\out{<div class="sourceCode">}}\preformatted{control$engine_select$train <- "train_rf"
control$params$train <- controller_training(
  formula = target ~ .,
  norm_data = TRUE,
  params = list(
    ntree = 100,
    mtry = 3
    # sample_weight = rep(1, nrow(train_data))  # optional
  )
)
}\if{html}{\out{</div>}}

\strong{Template Reference:}
See full template in \verb{inst/templates_control/4_c_template_train_rf.R}

\strong{Standardized Output (returned to framework):}
\itemize{
\item A structured list created by \code{initialize_output_train()}:
\itemize{
\item \code{model}: Fitted model object.
\item \code{model_type}: Identifier string ("rf").
\item \code{formula}: Used training formula.
\item \code{hyperparameters}: Merged hyperparameter set.
\item \code{specific_output}: Training duration and optional metadata.
}
}
}
\seealso{
\code{\link[=engine_train_rf]{engine_train_rf()}},
\code{\link[=default_params_train_rf]{default_params_train_rf()}},
\code{\link[=initialize_output_train]{initialize_output_train()}},
\code{\link[=controller_training]{controller_training()}}
Template: \verb{inst/templates_control/4_c_template_train_rf.R}
}
\keyword{internal}
