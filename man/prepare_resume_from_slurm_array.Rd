% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_2_zzz_helper_execution_resume.R
\name{prepare_resume_from_slurm_array}
\alias{prepare_resume_from_slurm_array}
\title{Helper: Prepare Resume Object from SLURM Array Execution}
\usage{
prepare_resume_from_slurm_array(
  control_path = "slurm_inputs/control_base.rds",
  split_output_path = "slurm_inputs/split_output.rds",
  result_dir = "slurm_outputs",
  metadata = list(engine = "SLURM_ARRAY", timestamp = Sys.time())
)
}
\arguments{
\item{control_path}{Path to the serialized control object (\code{.rds}). Default: \code{"slurm_inputs/control_base.rds"}.}

\item{split_output_path}{Path to the serialized split output (\code{.rds}). Default: \code{"slurm_inputs/split_output.rds"}.}

\item{result_dir}{Directory containing the result files \verb{result_split_<id>.rds}. Default: \code{"slurm_outputs"}.}

\item{metadata}{Optional named list of metadata to include in the resume object (e.g., \code{engine}, \code{timestamp}).}
}
\value{
A validated resume object compatible with \code{resume_workflow()}.
}
\description{
Collects control structure, split configuration, and individual result files
from a SLURM array job and compiles a standardized resume object that can be
passed directly to \code{resume_workflow()}.
}
\details{
Wraps internal loading and file validation logic, and supports flexible file
structure and metadata tagging.

\strong{Purpose:}
\itemize{
\item Automates reconstruction of the execution state after external parallel computation.
\item Enables full workflow continuation (e.g., aggregation, reporting) after SLURM execution.
}

\strong{Required Files:}
\itemize{
\item Control object (\code{control_base.rds}) and split object (\code{split_output.rds})
must be saved by the submission wrapper.
\item Individual result files must follow the naming pattern \verb{result_split_<id>.rds}
and reside in the defined result directory.
}

\strong{Usage Example:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{resume_object <- prepare_resume_from_slurm_array(
  control_path = "slurm_inputs/control_base.rds",
  split_output_path = "slurm_inputs/split_output.rds",
  result_dir = "slurm_outputs/"
)

result <- resume_workflow(resume_object)
}\if{html}{\out{</div>}}
}
