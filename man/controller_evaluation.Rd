% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_d_controller.R
\name{controller_evaluation}
\alias{controller_evaluation}
\title{Controller: Evaluation Input Specification}
\usage{
controller_evaluation(params = list())
}
\arguments{
\item{params}{Named list. Engine-specific configuration. Default is empty list. Each name corresponds to an evaluation engine; each value is a list of engine-specific parameters.}
}
\value{
Named list. To be stored in \code{control$params$eval} and passed to the evaluation engine(s). Compatible with all \code{flowengineR} modules.
}
\description{
Generates a standardized input structure for evaluation engines used within the
flowengineR workflow. Supports both built-in and custom metrics that assess
accuracy, fairness, or other user-defined aspects.
}
\details{
Designed for use in the \code{control} object. This controller separates the protected
attributes from metric-specific configuration, enabling flexible extensions.

\strong{Purpose:}
\itemize{
\item Specifies which protected attributes should be considered in fairness evaluation.
\item Defines engine-specific configurations for individual evaluation methods.
}

\strong{Automated Variable Handling:}
\itemize{
\item protected_name is \strong{automatically derived} from \code{control$data$vars$protected_vars_binary}.
\item Users do \strong{not need to set this manually}.
\item This requires prior use of \code{controller_vars()} to define binary indicators for protected attributes.
}

\strong{Binary Attribute Requirement:}
\itemize{
\item All attributes in protected_name must be \strong{binary} (e.g., 0/1, TRUE/FALSE).
\item Multi-class or continuous variables must be converted to binary before being passed into \code{protected_vars_binary}.
\item Evaluation engines will throw an error or produce invalid results if this condition is not met.
}

\strong{Standardized Structure:}
\itemize{
\item \code{params}: Named list of parameter lists, each keyed by evaluation engine name (e.g., \code{"eval_mse"}).
}

\strong{Usage Example:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{control$params$eval <- controller_evaluation(
  params = list(
    eval_mse = list(),
    eval_statisticalparity = list(threshold = 0.1)
  )
)
}\if{html}{\out{</div>}}
}
