% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_2__initialize_output_execution__mwiller.R
\name{initialize_output_execution}
\alias{initialize_output_execution}
\title{Output Initializer: Execution Engine Results}
\usage{
initialize_output_execution(
  execution_type,
  workflow_results,
  params = NULL,
  specific_output = NULL,
  continue_workflow = TRUE
)
}
\arguments{
\item{execution_type}{Character. Short label for the engine (e.g., "slurm_array", "batchtools").}

\item{workflow_results}{List of \code{run_workflow_singlesplitloop()} results (named to match splits), or \code{NULL} if deferred.}

\item{params}{Optional. List of engine-specific parameters.}

\item{specific_output}{Optional. Additional metadata or diagnostics.}

\item{continue_workflow}{Logical. Whether the workflow should proceed after execution.}
}
\value{
A standardized list returned from all execution engines.
}
\description{
Creates a standardized output structure for execution engines within the
flowengineR framework. This ensures consistency across execution types
such as sequential runs, batchtools, SLURM arrays, and future distributed methods.
}
\details{
\strong{Purpose:}
\itemize{
\item Ensures uniform downstream handling of execution results.
\item Encodes both immediate and deferred (e.g., SLURM) execution strategies.
}

\strong{Standardized Output:}
\itemize{
\item \code{execution_type}: Identifier string for the execution engine (e.g., \code{"sequential"}, \code{"slurm_array"}).
\item \code{workflow_results}: List of results (from \code{run_workflow_singlesplitloop()}), or \code{NULL} if external execution.
\item \code{params}: Optional engine-specific execution parameters.
\item \code{specific_output}: Optional metadata (e.g., file paths, engine diagnostics).
\item \code{continue_workflow}: Logical flag indicating whether the main workflow should proceed automatically.
}

\strong{Important Requirement:}
The names of \code{workflow_results} \strong{must exactly match} the split identifiers in \code{split_output$splits}.
This is required for proper mapping and evaluation within \code{resume_workflow()}.

\strong{Usage Example (inside a wrapper):}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{initialize_output_execution(
  execution_type = "sequential",
  workflow_results = result_list,
  params = control$params$execution$params,
  continue_workflow = TRUE
)
}\if{html}{\out{</div>}}
}
