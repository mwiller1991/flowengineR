% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/2_5_a_engine_inprocessing_fairness_adversialdebiasing.R
\name{wrapper_inprocessing_fairness_adversialdebiasing}
\alias{wrapper_inprocessing_fairness_adversialdebiasing}
\title{Wrapper for Fairness In-Processing Engine: Adversarial Debiasing}
\usage{
wrapper_inprocessing_fairness_adversialdebiasing(control, driver_train)
}
\arguments{
\item{control}{A standardized control object. Must include \code{control$data$vars} and a valid \code{control$params$inprocessing}.}

\item{driver_train}{A training engine function used to train the main model.}
}
\value{
A standardized fairness in-processing output.
}
\description{
Validates and prepares standardized inputs, merges default and user-defined parameters,
and invokes the adversarial debiasing engine. Wraps the result using \code{initialize_output_inprocessing()}.
}
\details{
\strong{Standardized Inputs:}
\itemize{
\item \code{control$params$train$data}: Training dataset (original or normalized).
\item \code{control$params$train$norm_data}: Logical flag indicating whether normalized data should be used. Must be same as for base trainer for model consistency.
\item \code{control$params$inprocessing$protected_attributes}: Character vector of protected attributes.
â†’ Auto-filled from \code{control$data$vars$protected_vars} via \code{autofill_controllers_from_vars()}.
\item \code{control$params$inprocessing$params}: Named list of engine-specific parameters.
\item \code{driver_train}: Training engine function for the main model (provided by the workflow).
}

\strong{Engine-Specific Parameters (\code{control$params$inprocessing$params}):}
\itemize{
\item \code{learning_rate} \emph{(numeric)}: Learning rate for adversarial updates (default: 0.01).
\item \code{num_epochs} \emph{(integer)}: Number of training epochs (default: 10).
\item \code{num_adversary_steps} \emph{(integer)}: Number of adversarial update steps per epoch (default: 3).
}

\strong{Variable Handling:}
\itemize{
\item The wrapper assumes that \code{protected_attributes} and \code{target_var} are injected via \code{autofill_controllers_from_vars()}.
\item These fields are \strong{required} by the engine but should \strong{not be set manually}.
}

\strong{Example Control Snippet:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{control$engine_select$inprocessing <- "inprocessing_fairness_adversialdebiasing"
control$params$inprocessing <- controller_inprocessing(
  norm_data = TRUE,
  params = list(
    learning_rate = 0.01,
    num_epochs = 10,
    num_adversary_steps = 3
  )
)
}\if{html}{\out{</div>}}

\strong{Template Reference:}
See full template in \verb{inst/templates_control/5_a_template_inprocessing_fairness_adversialdebiasing.R}

\strong{Standardized Output (returned to framework):}
A list structured via \code{initialize_output_inprocessing()}:
\itemize{
\item \code{adjusted_model}: The debiased main model.
\item \code{model_type}: \code{"Adversarial Debiasing"}.
\item \code{params}: Merged engine parameters.
\item \code{specific_output}: Includes:
\itemize{
\item \code{training_time}: Duration of training (in seconds).
\item \code{adversary_model}: Internally trained adversarial component.
\item \code{adversary_loss}: Per-epoch loss history.
}
}
}
\seealso{
\code{\link[=engine_inprocessing_fairness_adversialdebiasing]{engine_inprocessing_fairness_adversialdebiasing()}},
\code{\link[=default_params_inprocessing_fairness_adversialdebiasing]{default_params_inprocessing_fairness_adversialdebiasing()}},
\code{\link[=initialize_output_inprocessing]{initialize_output_inprocessing()}},
\code{\link[=controller_inprocessing]{controller_inprocessing()}},
Template: \verb{inst/templates_control/5_a_template_inprocessing_fairness_adversialdebiasing.R}
}
\keyword{internal}
