% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_d__controller__mwiller.R
\name{controller_postprocessing}
\alias{controller_postprocessing}
\title{Controller: Post-Processing Engine Configuration}
\usage{
controller_postprocessing(params = list())
}
\arguments{
\item{params}{Named list. Engine-specific configuration. Default is empty list.}
}
\value{
Named list. To be stored in \code{control$params$postprocessing} and passed to the post-processing engine.
}
\description{
Generates a standardized input structure for any post-processing engine
used within the \code{flowengineR} workflow. Post-processing engines adjust
model predictions after training, without modifying the model itself.
}
\details{
Typical use cases include: threshold correction, group-based adjustments,
rule-based overlays, or compliance alignment.

\strong{Purpose:}
\itemize{
\item Enables flexible prediction adjustment logic as a modular step.
\item Supports group-specific postprocessing using binary attributes as conditions.
}

\strong{Binary Attribute Requirement:}
\itemize{
\item The workflow expects binary/grouped versions of protected or grouping attributes.
\item These must be defined in \code{control$data$vars$protected_vars_binary} using \code{controller_vars()}.
\item Each variable listed must be strictly binary (e.g., 0/1 or TRUE/FALSE).
}

\strong{Workflow Injection:}
Before executing the engine, the workflow injects the following data frame:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{postprocessing_data <- cbind(
  predictions = <numeric>,        # model predictions
  actuals     = <factor/numeric>, # true outcome
  ... group-specific binary attributes ...
)
}\if{html}{\out{</div>}}
\itemize{
\item Column names used in postprocessing must match those in \code{protected_vars_binary}.
}

\strong{Standardized Structure:}
\itemize{
\item \code{params}: Named list of additional configuration passed to the engine.
}

\strong{Usage Example:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{control$params$postprocessing <- controller_postprocessing(
  params = list(method = "threshold_shift", delta = 0.05)
)
}\if{html}{\out{</div>}}
}
