% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_c_subregistry_validate_engines.R
\name{validate_engine_eval}
\alias{validate_engine_eval}
\title{Subregistry Validation for Evaluation Engines}
\usage{
validate_engine_eval(wrapper_function, default_params_function, engine_name)
}
\arguments{
\item{wrapper_function}{Function. The wrapper function for the evaluation engine.}

\item{default_params_function}{Function. Provides default parameters for the engine.}

\item{engine_name}{Character. Name of the engine being validated (e.g., \code{"eval_statisticalparity"}).}
}
\value{
TRUE if the engine passes structural and functional validation; error otherwise.
}
\description{
Validates evaluation engines during dynamic registration via \code{register_engine()}.
This ensures structural correctness and functional reliability before embedding
the engine into the modular workflow system.
}
\details{
\strong{Purpose:}
\itemize{
\item Confirms that the wrapper:
\itemize{
\item Accepts the expected argument signature: \verb{function(control)}
\item Calls the appropriate output initializer: \code{initialize_output_eval()}
\item Returns a list with required fields: \code{metrics}, \code{eval_type}, and \code{input_data}
}
}

\strong{Scope:}
\itemize{
\item Applies to all engines of type \verb{eval_*}.
\item Validation is triggered automatically unless bypassed via internal engine flag.
}

\strong{Functional Test:}
\itemize{
\item Simulates a complete evaluation context with:
\itemize{
\item Synthetic predictions and labels
\item Dummy protected attributes (binary factors)
\item Default parameters via controller
}
\item Confirms that required outputs are well-formed and consistent.
}

\strong{Common Validation Error Sources:}
\itemize{
\item Missing field \code{metrics} or empty list
\item \code{eval_type} not a character string
\item Incorrect data format in returned \code{input_data}
}
}
\keyword{internal}
