% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_a__metalevel__mwiller.R
\name{resume_workflow}
\alias{resume_workflow}
\title{Resume a Workflow After External Execution}
\usage{
resume_workflow(resume_object)
}
\arguments{
\item{resume_object}{A structured list returned by \code{controller_resume_execution()}, containing all necessary components to resume the workflow.}
}
\value{
A named list as returned by \code{continue_workflow()}, including all optional post-processing results.
}
\description{
This function allows a previously initiated modular workflow to be resumed after execution
was completed outside of R (e.g., via SLURM, batchtools, or other deferred backends).
It expects a structured resume object and internally calls \code{continue_workflow()}
to complete all post-execution steps such as aggregation, reporting, and publishing.
}
\details{
\strong{Inputs:}
\itemize{
\item \code{resume_object}: A list created by \code{controller_resume_execution()}, containing:
\itemize{
\item \code{control}: The original control object passed to the initial workflow.
\item \code{split_output}: Output of the splitter engine used before execution.
\item \code{execution_output}: A valid execution engine output, including \code{workflow_results}.
}
}

\strong{Output:}
\itemize{
\item A full workflow result object as returned by \code{continue_workflow()}:
\itemize{
\item \code{split_output}, \code{execution_output}
\item \code{aggregated_results}: Summary across workflow runs
\item \code{reportelements}, \code{reports}, \code{publishing}: If configured in the control
}
}

\strong{Usage Context:}
\itemize{
\item Intended for use after asynchronous or parallel execution completed externally
\item Enables full integration of batchtools or SLURM workflows into the modular pipeline
}
}
